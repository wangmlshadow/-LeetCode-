# python没有char 无法演示
# 几个有趣的位操作

# 利用或操作 | 和 空格将英文字符转换为小写
# ('a' | ' ') = 'a'
# ('A' | ' ') = 'a'

# 利于与操作 & 和下划线将英文字符转换为大写
# ('b' & '_') = 'B'
# ('B' & '_') = 'B'

# 利用异或操作 ^ 和空格进行英文字符大小写互换
# ('d' ^ ' ') = 'D'
# ('D' ^ ' ') = 'd'


# 判断两个数字是否异号
a, b = -1, 2
print((a ^ b) < 0)# True
a, b = 1, 2
print((a ^ b) < 0)# False


# 交换两个数
a, b = 1, 2
a ^= b
b ^= a
a ^= b
print(f'a = {a}, b = {b}')


# 加一
n = 1
n = -~n
print(n)


# 减一
n = 2
n = ~-n
print(n)


# 算法常用操作
# 消除数字n的二进制表示中的最后一个 1
# n & (n - 1)

# 剑指offer 15
# 计算汉明权重 二进制表达式中数字位数为 1 的个数
# 请实现一个函数，输入一个整数（以二进制串形式），输出该数二进制表示中 1 的个数。例如，把 9 表示成二进制是 1001，有 2 位是 1。因此，如果输入 9，则该函数输出 2。
class Solution:
    def hammingWeight(self, n: int) -> int:
        res = 0
        while n != 0:
            # 每次消除最后一位的1
            n = n & (n - 1)
            res += 1
        return res
"""
执行结果：通过
显示详情
执行用时：44 ms, 在所有 Python3 提交中击败了44.09%的用户
内存消耗：14.6 MB, 在所有 Python3 提交中击败了83.85%的用户
"""

# 判断一个数是不是2的指数
# 如果是2的指数 那么二进制表示一定只包含一个1
# n & (n - 1) == 0
